# -*- coding: utf-8 -*-
import time

import numpy
# Form implementation generated from reading ui file 'widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
import myqueue



classes = ["person",
  "bicycle",
  "car",
  "motorcycle",
  "airplane",
  "bus",
  "train",
  "truck",
  "boat",
  "traffic_light",
  "fire_hydrant"]


class Ui_Widget(object):
    def __init__(self):
        self.qtimer = None
        self.P =myqueue.Producer()
        self.C=myqueue.Consumers()


    def setupUi(self, Widget):
        Widget.setObjectName("Widget")
        Widget.resize(800, 600)
        Widget.setStyleSheet("background-color: rgb(8, 8, 8);")
        self.verticalLayout = QtWidgets.QVBoxLayout(Widget)
        self.verticalLayout.setContentsMargins(0, 13, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget = QtWidgets.QWidget(Widget)
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(11, 12, 11, 9)
        self.horizontalLayout.setSpacing(5)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.Edit_url = QtWidgets.QTextEdit(self.widget)
        self.Edit_url.setMaximumSize(QtCore.QSize(16777215, 25))
        self.Edit_url.setStyleSheet("border-radius:6px;\n"
"color: rgb(255, 255, 255);\n"
"border:1px solid rgba(255,255,255,0.7);")
        self.Edit_url.setObjectName("Edit_url")
        self.horizontalLayout.addWidget(self.Edit_url)
        self.StartBut = QtWidgets.QPushButton(self.widget)
        self.StartBut.setMinimumSize(QtCore.QSize(0, 25))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.StartBut.setFont(font)
        self.StartBut.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(75, 75, 75);\n"
"")
        self.StartBut.setObjectName("StartBut")
        self.horizontalLayout.addWidget(self.StartBut)
        self.StreamType = QtWidgets.QComboBox(self.widget)
        self.StreamType.setMinimumSize(QtCore.QSize(80, 25))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(11)
        self.StreamType.setFont(font)
        self.StreamType.setCurrentText("默认算法")
        self.StreamType.addItems(classes)
        self.StreamType.setStyleSheet("background-color: rgb(93,93,93);\n"
"color: rgb(255, 255, 255);")
        self.StreamType.setObjectName("StreamType")


        self.horizontalLayout.addWidget(self.StreamType)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setMinimumSize(QtCore.QSize(0, 25))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(75, 75, 75);")
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.horizontalLayout.setStretch(0, 1)
        self.horizontalLayout.setStretch(1, 5)
        self.horizontalLayout.setStretch(2, 1)
        self.verticalLayout.addWidget(self.widget)
        self.tabWidget = QtWidgets.QTabWidget(Widget)
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(11)
        self.tabWidget.setFont(font)
        self.tabWidget.setStyleSheet("\n"
"\n"
"\n"
"QTabBar::tab:selected, QTabBar::tab:hover {\n"
"    background-color: rgb(180, 180, 180);\n"
"}\n"
"QTabBar::tab{\n"
"    height:30px;\n"
"    width:80px;\n"
"     border-top-left-radius: 7px;\n"
"    border-top-right-radius: 7px;\n"
"    color: rgba(255, 255, 255,0.9);\n"
"    \n"
"    background-color: rgb(88, 88, 88);\n"
"}")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setElideMode(QtCore.Qt.ElideLeft)
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setDocumentMode(True)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.widget1 = QtWidgets.QWidget()
        self.widget1.setStyleSheet("background-color: rgb(54, 54, 54);")
        self.widget1.setObjectName("widget1")
        self.label_2 = QtWidgets.QLabel(self.widget1)
        self.label_2.setGeometry(QtCore.QRect(20, 20, 761, 421))
        self.label_2.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"\n"
"border:2px solid rgb(234,23,55);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.tabWidget.addTab(self.widget1, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setStyleSheet("background-color: rgb(54, 54, 54);")
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.widget_2 = QtWidgets.QWidget(Widget)
        self.widget_2.setStyleSheet("")
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout.addWidget(self.widget_2)
        self.verticalLayout.setStretch(0, 1)
        self.verticalLayout.setStretch(1, 10)
        self.verticalLayout.setStretch(2, 1)

        # 初始化定时器
        self.qtimer = QTimer()



        self.retranslateUi(Widget)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Widget)
        self.connectSloat()


    def retranslateUi(self, Widget):
        _translate = QtCore.QCoreApplication.translate
        Widget.setWindowTitle(_translate("Widget", "sample"))
        self.label.setText(_translate("Widget", "请输入流地址："))
        self.Edit_url.setPlaceholderText(_translate("Widget", "rtsp://192.168.2.54:555/live"))
        self.StartBut.setText(_translate("Widget", "确认开启"))
        self.StreamType.setPlaceholderText(_translate("Widget", "车辆车牌"))
        self.pushButton.setText(_translate("Widget", "切换算法"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.widget1), _translate("Widget", "默认算法"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Widget", "其他算法"))


    def ButImage(self):
        self.P.set_url(self.Edit_url.toPlainText())
        self.P.start()
        self.C.start()
        self.qtimer.start(5)


    def SetLabel(self):
        frame = myqueue.QueueSetPix.get()
        pixtemp= frame.scaled(self.label_2.width(), self.label_2.height())
        self.label_2.setPixmap(pixtemp)

    def SetNum(self):
        self.P.setNum(self.StreamType.currentText())

    # 连接信号与槽
    def connectSloat(self):
        self.StartBut.clicked.connect(lambda :self.ButImage())
        self.qtimer.timeout.connect(lambda :self.SetLabel())
        self.pushButton.clicked.connect(lambda :self.SetNum())










